generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model personal_info {
  id                Int        @id @default(autoincrement())
  first_name        String     @db.VarChar(50)
  last_name         String     @db.VarChar(50)
  home_address      String?
  phone_number      String     @db.VarChar(11)
  gender            String?    @db.VarChar(10)
  profile_image     String?
  next_of_kin       String     @db.VarChar(50)
  emergency_contact String     @db.VarChar(50)
  email             String?    @db.VarChar(100)
  work_info         work_info?
}

model work_info {
  personal_info_id Int           @id
  department       String        @db.VarChar(50)
  job_title        String?       @db.VarChar(50)
  date_hired       DateTime?     @db.Date
  account_number   String        @db.VarChar(15)
  card_number      String?       @unique @db.VarChar(20)
  position_status  String?       @db.VarChar(50)
  approved         Boolean?
  salary           Decimal?      @db.Decimal(12, 2)
  personal_info    personal_info @relation(fields: [personal_info_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model admin {
  id Int @id @default(autoincrement())
  email String @unique @db.VarChar(100)
  username String @unique @db.VarChar(50)
  password String @db.VarChar(100)
  resetPasswordToken String? @unique
  resetPasswordExpiry DateTime?
}

enum Role {
  ADMIN
  USER
}

model tag {
  id Int @id @default(autoincrement())
  isApproved Boolean
  name String @db.VarChar(20)
  role Role @default(ADMIN)
}